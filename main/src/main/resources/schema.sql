DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   name VARCHAR(255),
   email VARCHAR(255),
   CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   name VARCHAR(50),
   CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   annotation VARCHAR(2000) NOT NULL,
   category_id BIGINT NOT NULL,
   confirmed_requests INTEGER,
   created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
   description VARCHAR(7000) NOT NULL,
   event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
   initiator_id BIGINT NOT NULL,
   paid BOOLEAN NOT NULL,
   participant_limit INTEGER,
   published_on TIMESTAMP WITHOUT TIME ZONE,
   request_moderation BOOLEAN,
   state VARCHAR(10) NOT NULL,
   title VARCHAR(128) NOT NULL,
   views INTEGER,
   location_lat REAL NOT NULL,
   location_lon REAL NOT NULL,
   CONSTRAINT pk_events PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   event_id BIGINT,
   requester_id BIGINT,
   status VARCHAR(50),
   created TIMESTAMP WITHOUT TIME ZONE,
   CONSTRAINT pk_requests PRIMARY KEY (id)
);

ALTER TABLE requests ADD CONSTRAINT FK_REQUESTS_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (id);

ALTER TABLE requests ADD CONSTRAINT FK_REQUESTS_ON_REQUESTER FOREIGN KEY (requester_id) REFERENCES users (id);

ALTER TABLE events ADD CONSTRAINT FK_EVENTS_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES categories (id);

ALTER TABLE events ADD CONSTRAINT FK_EVENTS_ON_INITIATOR FOREIGN KEY (initiator_id) REFERENCES users (id);

ALTER TABLE categories ADD CONSTRAINT uc_categories_name UNIQUE (name);
ALTER TABLE users ADD CONSTRAINT uc_users_email UNIQUE (email);